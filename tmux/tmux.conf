# install in vim:
# :!ln -s %:p ~/.tmux.conf

# remap prefix to Control + w
# set -g prefix C-w
# bind 'C-w C-w' to type 'C-w'
# bind C-w send-prefix
# unbind C-b

# status bar on top
set-option -g status-position top
#set-option -g status-position bottom
bind b set-option -g status

# Set XTerm key bindings
setw -g xterm-keys on

# Set colors
set-option -g default-terminal "screen-256color"
set -ga terminal-overrides ",*:Tc"

# Configure escape vim for Neovim.
# https://github.com/neovim/neovim/wiki/FAQ#esc-in-tmux-or-gnu-screen-is-delayed
set-option -sg escape-time 12

# Set reload key to r
bind r source-file ~/.tmux.conf

# Count sessions start at 1
set -g base-index 1

# Enable focus-events to enable vim to refresh accordingly.
set-option -g focus-events on

# Use vim bindings
setw -g mode-keys vi

# Enable mouse in tmux.  Note that this will interfere with mouse selection.
# In iterm2, hold down opt to enable normal mouse selection while mouse mode
# is on in tmux.
set -g mouse on

# Remap window navigation to vim
unbind-key j
bind-key j select-pane -D 
unbind-key k
bind-key k select-pane -U
unbind-key h
bind-key h select-pane -L
unbind-key l
bind-key l select-pane -R

# Resize the current pane using Alt + direction
# those might not work on mac
bind -n M-k resize-pane -U
bind -n M-j resize-pane -D
bind -n M-h resize-pane -L
bind -n M-l resize-pane -R

# Open new panes and windows in current directory.
bind '%' split-window -h -c '#{pane_current_path}'
bind '"' split-window -v -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'

# Tmux statusbar config (created by https://github.com/edkolev/tmuxline.vim)
# set -g status-justify "left"
# set -g status "on"
# set -g status-left-style "none"
# set -g message-command-style "fg=#333333,bg=#c8c8fa"
# set -g status-right-style "none"
# set -g pane-active-border-style "fg=#795da3"
# set -g status-style "none,bg=#f5f5f5"
# set -g message-style "fg=#333333,bg=#c8c8fa"
# set -g pane-border-style "fg=#c8c8fa"
# set -g status-right-length "100"
# set -g status-left-length "100"
# setw -g window-status-activity-style "none"
# setw -g window-status-separator ""
# setw -g window-status-style "none,fg=#333333,bg=#f5f5f5"
# set -g status-left "#[fg=#f5f5f5,bg=#795da3,bold] #S #[fg=#795da3,bg=#f5f5f5,nobold,nounderscore,noitalics]"
# set -g status-right "#[fg=#c8c8fa,bg=#f5f5f5,nobold,nounderscore,noitalics]#[fg=#333333,bg=#c8c8fa] %Y-%m-%d  %H:%M #[fg=#795da3,bg=#c8c8fa,nobold,nounderscore,noitalics]#[fg=#f5f5f5,bg=#795da3] #h "
# setw -g window-status-format "#[fg=#333333,bg=#f5f5f5] #I #[fg=#333333,bg=#f5f5f5] #W "
# setw -g window-status-current-format "#[fg=#f5f5f5,bg=#c8c8fa,nobold,nounderscore,noitalics]#[fg=#333333,bg=#c8c8fa] #I #[fg=#333333,bg=#c8c8fa] #W #[fg=#c8c8fa,bg=#f5f5f5,nobold,nounderscore,noitalics]"
# end tmux statusbar config

# vim-tmux-navigator
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
# end tmux navigator config

# Enable pbcopy/pbpaste in tmux.
if-shell \
  'test "$(uname -s)" = Darwin && type reattach-to-user-namespace > /dev/null' \
  'set-option -g default-command "exec reattach-to-user-namespace -l zsh"'

# Local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'base16-project/base16-tmux'
source-file $HOME/.config/base16-project/tmux.base16.conf

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# status line style
set-option -g status-left "#{session_name}   "
#set-option -g status-right "#{?window_bigger,[#{window_offset_x}#,#{window_offset_y}] ,}\"#{=21:pane_title}\" %H:%M %d-%b-%y"
set-option -g status-right "{} #{=21:pane_title} %H:%M"
set-option -g window-status-format "#W"
set-option -g window-status-current-format "#W"



#set-window-option -g window-status-current-style bg=yellow,fg=black
